@model BlipApp.Models.Group
@using Microsoft.AspNetCore.Identity
@inject UserManager<ApplicationUser> UserManager

<div class="d-flex justify-content-between align-items-center">
    <h3 class="mb-0">@Model.Title</h3>
    @if (!IsUserInGroup(Model.UserInGroup, UserManager.GetUserId(User)))
    {
        <form method="post" asp-controller="Groups" asp-action="AddUser">
            <input type="hidden" name="GroupId" value="@Model.Id" />
            <input type="hidden" name="UserId" value="@UserManager.GetUserId(User)" />

            <input type="submit" class="btn btn-secondary" value="Join group" />
        </form>
    }

    @if (IsUserTheCreator(Model.UserInGroup, UserManager.GetUserId(User)) || User.IsInRole("Admin"))
    {
        <div class="d-flex justify-content-between align-items-center">
            <form method="post" action="/Groups/Delete/@Model.Id">
                <button class="btn btn-danger" type="submit">Delete group</button>
            </form>

            <a class="btn btn-secondary border-0 m-2" href="/Groups/Edit/@Model.Id">
                <i class="bi bi-pencil"></i>
            </a>
        </div>
    }

</div>
<hr />
<h4>Chat:</h4>

<div class="messages-container mt-3" style="max-height: 350px; overflow-y: auto;">
    @foreach (var msg in Model.Messages)
    {
        <div class="container mb-1">
            <div class="row p-0">
                <div class="col-md-2"></div>

                <div class="col-md-8">
                    <div class="mb-1" style="overflow: hidden;">
                        <small><i class="bi bi-person"></i> @GetUserNameById(@msg.UserId)</small><br />
                        <p class="mb-0 ms-2 border rounded-pill ps-3 pe-3 py-2 custom-bg-color d-inline-block w-auto">@msg.Content</p>
                    </div>

                    @if (msg.UserId == ViewBag.UserCurent || ViewBag.EsteAdmin)
                    {
                        <div class="d-flex">
                            <div class="me-2">
                                <a class="btn btn-outline-primary btn-sm" href="/Messages/Edit/@msg.Id"><i class="bi bi-pencil-square"></i> Edit</a>
                            </div>
                            <div>
                                <form method="post" action="/Messages/Delete/@msg.Id">
                                    <button class="btn btn-outline-danger btn-sm" type="submit"><i class="bi bi-trash"></i> Delete</button>
                                </form>
                            </div>
                        </div>
                    }
                </div>

                <div class="col-md-2"></div>
            </div>
        </div>
    }
</div>


<div class="container">
    <div class=" d-flex justify-content-center">
        @if (IsUserInGroup(Model.UserInGroup, UserManager.GetUserId(User)))
        {
            <form method="post" action="/Groups/Show/@Model.Id" class="w-75">
                <div class="card-body d-flex">
                    <div class="flex-grow-1">
                        <input type="hidden" name="GroupId" value="@Model.Id" />
                        @Html.TextBox("Content", null, new { @class = "form-control ps-4 border rounded-pill", style = "height: 100px;", placeholder = "Message..." })
                    </div>
                    <div class="ms-2">
                        <input class="btn btn-secondary border rounded-pill" type="submit" value="Submit">
                    </div>
                </div>
            </form>
        }
    </div>
</div>

@functions {
    bool IsUserTheCreator(ICollection<UserInGroup>? userInGroup, string currentUserId)
    {
        return userInGroup != null && userInGroup.Any(u => u.UserId == currentUserId && u == userInGroup.First());
    }

    bool IsUserInGroup(ICollection<UserInGroup>? userInGroup, string currentUserId)
    {
        return userInGroup != null && userInGroup.Any(u => u.UserId == currentUserId);
    }

    string GetUserNameById(string userId)
    {
        var user = UserManager.FindByIdAsync(userId).Result;
        return user?.UserName ?? "User Not Found";
    }


}